#ifndef INPUT_H
#define INPUT_H

#include "../gfx/types.h"

#define DEMO_OFF      0
#define DEMO_RECORD   1
#define DEMO_PLAYBACK 2
#define MAX_DEMO      2800

typedef enum { I_KEYBOARD, I_MOUSE, I_JOYSTICK, I_FORCE } ITYPE;

#define BUT_1 ( buttons[0] )
#define BUT_2 ( buttons[1] )
#define BUT_3 ( buttons[2] )
#define BUT_4 ( buttons[3] )

extern BOOL buttons[4];
extern ITYPE control;
extern INT demo_mode;
extern INT f_addx;
extern INT f_addy;

/***************************************************************************
DEMO_MakePlayer() -
 ***************************************************************************/
void DEMO_MakePlayer( INT game );

/***************************************************************************
DEMO_DisplayStats (
 ***************************************************************************/
void DEMO_DisplayStats( void );

/***************************************************************************
DEMO_StartRec(
 ***************************************************************************/
void DEMO_StartRec( void );

/***************************************************************************
DEMO_StartPlayback(
 ***************************************************************************/
void DEMO_StartPlayback( void );

/***************************************************************************
DEMO_SetFileName()
 ***************************************************************************/
void DEMO_SetFileName( CHAR* in_name );

/***************************************************************************
DEMO_GLBFile (
 ***************************************************************************/
void DEMO_GLBFile( DWORD item );

/***************************************************************************
DEMO_LoadFile()
 ***************************************************************************/
void DEMO_LoadFile( void );

/***************************************************************************
DEMO_SaveFile(
 ***************************************************************************/
void DEMO_SaveFile( void );

/***************************************************************************
DEMO_Think(
 ***************************************************************************/
BOOL DEMO_Think( void );

/***************************************************************************
DEMO_Play() - Demo playback routine
 ***************************************************************************/
BOOL // TRUE=Aborted, FALSE = timeout
    DEMO_Play( void );

/***************************************************************************
IPT_CalJoy() - Calibrates Joystick ( joystick must be centered )
 ***************************************************************************/
void IPT_CalJoy( void );

/***************************************************************************
IPT_MovePlayer() - Perform player movement for current input device
 ***************************************************************************/
void IPT_MovePlayer( void );

/***************************************************************************
IPT_PauseControl() - Lets routines run without letting user control anyting
 ***************************************************************************/
void IPT_PauseControl( BOOL flag );

/***************************************************************************
IPT_FMovePlayer() - Forces player to move addx/addy
 ***************************************************************************/
void IPT_FMovePlayer(
    INT addx, // INPUT : add to x pos
    INT addy // INPUT : add to y pos
);

/***************************************************************************
IPT_Init () - Initializes INPUT system
 ***************************************************************************/
void IPT_Init( void );

/***************************************************************************
IPT_DeInit() - Freeze up resources used by INPUT system
 ***************************************************************************/
void IPT_DeInit( void );

/***************************************************************************
IPT_Start() - Tranfers control from PTRAPI stuff to IPT stuff
 ***************************************************************************/
void IPT_Start( void );

/***************************************************************************
IPT_End() - Tranfers control from IPT stuff to PTR stuff
 ***************************************************************************/
void IPT_End( void );

/***************************************************************************
IPT_LoadPrefs() - Load Input Prefs from setup.ini
 ***************************************************************************/
void IPT_LoadPrefs( void );

#endif
